- if topic.visible_to?(current_reader)
  - with_context ||= false
  - cssclass = ['topic']
  - cssclass << 'sticky' if topic.sticky?
  - cssclass << 'locked' if topic.locked?

  %li{:id => topic.dom_id, :class => cssclass.join(' ')}
    %span.context
      - if with_context
        = link_to(topic.forum.name, forum_url(topic.forum)) + ':'
    %span.subject
      %a{:href => forum_topic_url(topic.forum, topic), :class => 'main'}
        = gravatar_for(topic.reader, {:size => 40}, {:alt => topic.reader.name, :class => 'gravatar'})
        = topic.name
    %span.context
      - if topic.posts.count > 1
        = t('forums.topics.context', :reader_name_link => link_to(topic.reader.name, reader_url(topic.reader)), :posts_count => topic.posts.count, :name_replier_link => link_to(topic.replied_by.name, reader_url(topic.replied_by)), :replied_at_date => friendly_date(topic.replied_at))
      
        / = link_to topic.reader.name + '.', reader_url(topic.reader)
        / = topic.posts.count
        / = pluralize(topic.posts.count, 'comment') + ','
        / most recently from
        / = link_to topic.replied_by.name, reader_url(topic.replied_by)
        / = friendly_date(topic.replied_at)
      - else
        = t('forums.from')
        = link_to topic.reader.name, reader_url(topic.reader)
        = friendly_date(topic.created_at)
        
    %div.preview
      - if topic.page
        = truncate_words(topic.page.render_part(:body), 50)
      - elsif topic.first_post
        = truncate_and_textilize(topic.first_post.body, 50)
      - else
        %p= t('forums.topic.empty')
    